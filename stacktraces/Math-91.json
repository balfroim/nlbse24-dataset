{"tours": [{"failing_test": {"className": " org.apache.commons.math.fraction.FractionTest", "methodName": "testCompareTo", "error": "junit.framework.AssertionFailedError", "message": "expected:<-1> but was:<0>"}, "patched_method": {"file_path": "/src/java/org/apache/commons/math/fraction/Fraction.java", "method_name": "compareTo", "content": "    /**\n     * Compares this object to another based on size.\n     * @param object the object to compare to\n     * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n     *         than <tt>object</tt>, 0 if they are equal.\n     */\n    public int compareTo(Fraction object) {\n        double nOd = doubleValue();\n        double dOn = object.doubleValue();\n        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n    }", "javadoc_start_line": 252, "annotations_start_line": 258, "method_start_line": 258, "end_line": 262}, "steps": [{"file_path": "/src/test/org/apache/commons/math/fraction/FractionTest.java", "method_name": "testCompareTo", "content": "    public void testCompareTo() {\n        Fraction first = new Fraction(1, 2);\n        Fraction second = new Fraction(1, 3);\n        Fraction third = new Fraction(1, 2);\n        \n        assertEquals(0, first.compareTo(first));\n        assertEquals(0, first.compareTo(third));\n        assertEquals(1, first.compareTo(second));\n        assertEquals(-1, second.compareTo(first));\n\n        // these two values are different approximations of PI\n        // the first  one is approximately PI - 3.07e-18\n        // the second one is approximately PI + 1.936e-17\n        Fraction pi1 = new Fraction(1068966896, 340262731);\n        Fraction pi2 = new Fraction( 411557987, 131002976);\n        assertEquals(-1, pi1.compareTo(pi2));\n        assertEquals( 1, pi2.compareTo(pi1));\n        assertEquals(0.0, pi1.doubleValue() - pi2.doubleValue(), 1.0e-20);\n    }", "javadoc_start_line": 163, "annotations_start_line": 163, "method_start_line": 163, "end_line": 181}, {"file_path": "/src/java/org/apache/commons/math/fraction/Fraction.java", "method_name": "compareTo", "content": "    /**\n     * Compares this object to another based on size.\n     * @param object the object to compare to\n     * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n     *         than <tt>object</tt>, 0 if they are equal.\n     */\n    public int compareTo(Fraction object) {\n        double nOd = doubleValue();\n        double dOn = object.doubleValue();\n        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n    }", "javadoc_start_line": 252, "annotations_start_line": 258, "method_start_line": 258, "end_line": 262}]}], "project": {"name": "Math", "version": 91}}