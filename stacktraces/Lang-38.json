{"tours": [{"failing_test": {"className": " org.apache.commons.lang3.time.FastDateFormatTest", "methodName": "testLang538", "error": "junit.framework.ComparisonFailure", "message": "dateTime expected:<2009-10-16T[16]:42:16.000Z> but was:<2009-10-16T[08]:42:16.000Z>"}, "patched_method": {"file_path": "/src/java/org/apache/commons/lang3/time/FastDateFormat.java", "method_name": "format", "content": "    /**\n     * <p>Formats a <code>Calendar</code> object into the\n     * supplied <code>StringBuffer</code>.</p>\n     * \n     * @param calendar  the calendar to format\n     * @param buf  the buffer to format into\n     * @return the specified string buffer\n     */\n    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            calendar = (Calendar) calendar.clone();\n            calendar.setTimeZone(mTimeZone);\n        }\n        return applyRules(calendar, buf);\n    }", "javadoc_start_line": 862, "annotations_start_line": 870, "method_start_line": 870, "end_line": 876}, "steps": [{"file_path": "/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java", "method_name": "testLang538", "content": "    public void testLang538() {\n        final String dateTime = \"2009-10-16T16:42:16.000Z\";\n\n        // more commonly constructed with: cal = new GregorianCalendar(2009, 9, 16, 8, 42, 16)\n        // for the unit test to work in any time zone, constructing with GMT-8 rather than default locale time zone\n        GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(\"GMT-8\"));\n        cal.clear();\n        cal.set(2009, 9, 16, 8, 42, 16);\n\n        FastDateFormat format = FastDateFormat.getInstance(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", TimeZone.getTimeZone(\"GMT\"));\n        assertEquals(\"dateTime\", dateTime, format.format(cal));\n    }", "javadoc_start_line": 339, "annotations_start_line": 339, "method_start_line": 339, "end_line": 350}, {"file_path": "/src/java/org/apache/commons/lang3/time/FastDateFormat.java", "method_name": "format", "content": "    /**\n     * <p>Formats a <code>Calendar</code> object.</p>\n     * \n     * @param calendar  the calendar to format\n     * @return the formatted string\n     */\n    public String format(Calendar calendar) {\n        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();\n    }", "javadoc_start_line": 825, "annotations_start_line": 831, "method_start_line": 831, "end_line": 833}]}], "project": {"name": "Lang", "version": 38}}