{"tours": [{"failing_test": {"className": " org.apache.commons.math.stat.FrequencyTest", "methodName": "testAddNonComparable", "error": "java.lang.ClassCastException", "message": "java.lang.Object cannot be cast to java.lang.Comparable"}, "patched_method": {"file_path": "/src/java/org/apache/commons/math/stat/Frequency.java", "method_name": "addValue", "content": "    /**\n     * Adds 1 to the frequency count for v.\n     * <p>\n     * If other objects have already been added to this Frequency, v must\n     * be comparable to those that have already been added.\n     * </p>\n     * \n     * @param v the value to add.\n     * @throws IllegalArgumentException if <code>v</code> is not Comparable, \n     *         or is not comparable with previous entries\n     * @deprecated use {@link #addValue(Comparable)} instead\n     */\n    @Deprecated\n    public void addValue(Object v) {\n            addValue((Comparable<?>) v);            \n    }", "javadoc_start_line": 96, "annotations_start_line": 108, "method_start_line": 109, "end_line": 111}, "steps": [{"file_path": "/src/test/org/apache/commons/math/stat/FrequencyTest.java", "method_name": "testAddNonComparable", "content": "    public void testAddNonComparable(){\n        try {\n            f.addValue(new Object()); // This was previously OK\n            fail(\"Expected IllegalArgumentException\");\n        } catch (IllegalArgumentException expected) {\n        }\n        f.clear();\n        f.addValue(1);\n        try {\n            f.addValue(new Object());\n            fail(\"Expected IllegalArgumentException\");\n        } catch (IllegalArgumentException expected) {\n        }\n    }", "javadoc_start_line": 193, "annotations_start_line": 193, "method_start_line": 193, "end_line": 206}, {"file_path": "/src/java/org/apache/commons/math/stat/Frequency.java", "method_name": "addValue", "content": "    /**\n     * Adds 1 to the frequency count for v.\n     * <p>\n     * If other objects have already been added to this Frequency, v must\n     * be comparable to those that have already been added.\n     * </p>\n     * \n     * @param v the value to add.\n     * @throws IllegalArgumentException if <code>v</code> is not Comparable, \n     *         or is not comparable with previous entries\n     * @deprecated use {@link #addValue(Comparable)} instead\n     */\n    @Deprecated\n    public void addValue(Object v) {\n            addValue((Comparable<?>) v);            \n    }", "javadoc_start_line": 96, "annotations_start_line": 108, "method_start_line": 109, "end_line": 111}]}], "project": {"name": "Math", "version": 89}}