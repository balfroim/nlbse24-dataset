{"tours": [{"failing_test": {"className": " org.jfree.chart.plot.junit.CategoryPlotTests", "methodName": "testGetRangeAxisIndex", "error": "junit.framework.AssertionFailedError", "message": ""}, "patched_method": {"file_path": "/source/org/jfree/chart/plot/CategoryPlot.java", "method_name": "getRangeAxisIndex", "content": "    /**\n     * Returns the index of the specified axis, or <code>-1</code> if the axis\n     * is not assigned to the plot.\n     *\n     * @param axis  the axis (<code>null</code> not permitted).\n     *\n     * @return The axis index.\n     * \n     * @see #getRangeAxis(int)\n     * @see #getDomainAxisIndex(CategoryAxis)\n     * \n     * @since 1.0.7\n     */\n    public int getRangeAxisIndex(ValueAxis axis) {\n        int result = this.rangeAxes.indexOf(axis);\n        if (result < 0) { // try the parent plot\n            Plot parent = getParent();\n            if (parent instanceof CategoryPlot) {\n                CategoryPlot p = (CategoryPlot) parent;\n                result = p.getRangeAxisIndex(axis);\n            }\n        }\n        return result;\n    }", "javadoc_start_line": 959, "annotations_start_line": 972, "method_start_line": 972, "end_line": 982}, "steps": [{"file_path": "/source/org/jfree/chart/plot/CategoryPlot.java", "method_name": "getRangeAxisIndex", "content": "    /**\n     * Returns the index of the specified axis, or <code>-1</code> if the axis\n     * is not assigned to the plot.\n     *\n     * @param axis  the axis (<code>null</code> not permitted).\n     *\n     * @return The axis index.\n     * \n     * @see #getRangeAxis(int)\n     * @see #getDomainAxisIndex(CategoryAxis)\n     * \n     * @since 1.0.7\n     */\n    public int getRangeAxisIndex(ValueAxis axis) {\n        int result = this.rangeAxes.indexOf(axis);\n        if (result < 0) { // try the parent plot\n            Plot parent = getParent();\n            if (parent instanceof CategoryPlot) {\n                CategoryPlot p = (CategoryPlot) parent;\n                result = p.getRangeAxisIndex(axis);\n            }\n        }\n        return result;\n    }", "javadoc_start_line": 959, "annotations_start_line": 972, "method_start_line": 972, "end_line": 982}]}, {"failing_test": {"className": " org.jfree.chart.plot.junit.CategoryPlotTests", "methodName": "testGetRangeAxisIndex", "error": "junit.framework.AssertionFailedError", "message": ""}, "patched_method": {"file_path": "/source/org/jfree/chart/plot/CategoryPlot.java", "method_name": "getDomainAxisIndex", "content": "    /**\n     * Returns the index of the specified axis, or <code>-1</code> if the axis\n     * is not assigned to the plot.\n     * \n     * @param axis  the axis (<code>null</code> not permitted).\n     * \n     * @return The axis index.\n     * \n     * @see #getDomainAxis(int)\n     * @see #getRangeAxisIndex(ValueAxis)\n     * \n     * @since 1.0.3\n     */\n    public int getDomainAxisIndex(CategoryAxis axis) {\n        return this.domainAxes.indexOf(axis);\n    }", "javadoc_start_line": 684, "annotations_start_line": 697, "method_start_line": 697, "end_line": 699}, "steps": [], "generation_failure": {"error": "Failed to generate stacktrace", "error_message": "[Errno 2] No such file or directory: './projects/Chart/19/results/stacktrace-testGetRangeAxisIndex-getDomainAxisIndex.csv'"}}, {"failing_test": {"className": " org.jfree.chart.plot.junit.CategoryPlotTests", "methodName": "testGetDomainAxisIndex", "error": "junit.framework.AssertionFailedError", "message": ""}, "patched_method": {"file_path": "/source/org/jfree/chart/plot/CategoryPlot.java", "method_name": "getRangeAxisIndex", "content": "    /**\n     * Returns the index of the specified axis, or <code>-1</code> if the axis\n     * is not assigned to the plot.\n     *\n     * @param axis  the axis (<code>null</code> not permitted).\n     *\n     * @return The axis index.\n     * \n     * @see #getRangeAxis(int)\n     * @see #getDomainAxisIndex(CategoryAxis)\n     * \n     * @since 1.0.7\n     */\n    public int getRangeAxisIndex(ValueAxis axis) {\n        int result = this.rangeAxes.indexOf(axis);\n        if (result < 0) { // try the parent plot\n            Plot parent = getParent();\n            if (parent instanceof CategoryPlot) {\n                CategoryPlot p = (CategoryPlot) parent;\n                result = p.getRangeAxisIndex(axis);\n            }\n        }\n        return result;\n    }", "javadoc_start_line": 959, "annotations_start_line": 972, "method_start_line": 972, "end_line": 982}, "steps": [], "generation_failure": {"error": "Failed to generate stacktrace", "error_message": "[Errno 2] No such file or directory: './projects/Chart/19/results/stacktrace-testGetDomainAxisIndex-getRangeAxisIndex.csv'"}}, {"failing_test": {"className": " org.jfree.chart.plot.junit.CategoryPlotTests", "methodName": "testGetDomainAxisIndex", "error": "junit.framework.AssertionFailedError", "message": ""}, "patched_method": {"file_path": "/source/org/jfree/chart/plot/CategoryPlot.java", "method_name": "getDomainAxisIndex", "content": "    /**\n     * Returns the index of the specified axis, or <code>-1</code> if the axis\n     * is not assigned to the plot.\n     * \n     * @param axis  the axis (<code>null</code> not permitted).\n     * \n     * @return The axis index.\n     * \n     * @see #getDomainAxis(int)\n     * @see #getRangeAxisIndex(ValueAxis)\n     * \n     * @since 1.0.3\n     */\n    public int getDomainAxisIndex(CategoryAxis axis) {\n        return this.domainAxes.indexOf(axis);\n    }", "javadoc_start_line": 684, "annotations_start_line": 697, "method_start_line": 697, "end_line": 699}, "steps": [{"file_path": "/source/org/jfree/chart/plot/CategoryPlot.java", "method_name": "getDomainAxisIndex", "content": "    /**\n     * Returns the index of the specified axis, or <code>-1</code> if the axis\n     * is not assigned to the plot.\n     * \n     * @param axis  the axis (<code>null</code> not permitted).\n     * \n     * @return The axis index.\n     * \n     * @see #getDomainAxis(int)\n     * @see #getRangeAxisIndex(ValueAxis)\n     * \n     * @since 1.0.3\n     */\n    public int getDomainAxisIndex(CategoryAxis axis) {\n        return this.domainAxes.indexOf(axis);\n    }", "javadoc_start_line": 684, "annotations_start_line": 697, "method_start_line": 697, "end_line": 699}]}], "project": {"name": "Chart", "version": 19}}