{"tours": [{"failing_test": {"className": " org.jfree.data.xy.junit.XYSeriesTests", "methodName": "testBug1955483", "error": "java.lang.IndexOutOfBoundsException", "message": "Index: -1, Size: 1"}, "patched_method": {"file_path": "/source/org/jfree/data/xy/XYSeries.java", "method_name": "addOrUpdate", "content": "    /**\n     * Adds or updates an item in the series and sends a\n     * {@link SeriesChangeEvent} to all registered listeners.\n     *\n     * @param x  the x-value (<code>null</code> not permitted).\n     * @param y  the y-value (<code>null</code> permitted).\n     *\n     * @return A copy of the overwritten data item, or <code>null</code> if no\n     *         item was overwritten.\n     */\n    public XYDataItem addOrUpdate(Number x, Number y) {\n        if (x == null) {\n            throw new IllegalArgumentException(\"Null 'x' argument.\");\n        }\n\n        // if we get to here, we know that duplicate X values are not permitted\n        XYDataItem overwritten = null;\n        int index = indexOf(x);\n        if (index >= 0 && !this.allowDuplicateXValues) {\n            XYDataItem existing = (XYDataItem) this.data.get(index);\n            try {\n                overwritten = (XYDataItem) existing.clone();\n            }\n            catch (CloneNotSupportedException e) {\n                throw new SeriesException(\"Couldn't clone XYDataItem!\");\n            }\n            existing.setY(y);\n        }\n        else {\n            // if the series is sorted, the negative index is a result from\n            // Collections.binarySearch() and tells us where to insert the\n            // new item...otherwise it will be just -1 and we should just\n            // append the value to the list...\n            if (this.autoSort) {\n                this.data.add(-index - 1, new XYDataItem(x, y));\n            }\n            else {\n                this.data.add(new XYDataItem(x, y));\n            }\n            // check if this addition will exceed the maximum item count...\n            if (getItemCount() > this.maximumItemCount) {\n                this.data.remove(0);\n            }\n        }\n        fireSeriesChanged();\n        return overwritten;\n    }", "javadoc_start_line": 530, "annotations_start_line": 540, "method_start_line": 540, "end_line": 576}, "steps": [{"file_path": "/source/org/jfree/data/xy/XYSeries.java", "method_name": "addOrUpdate", "content": "    /**\n     * Adds or updates an item in the series and sends a\n     * {@link SeriesChangeEvent} to all registered listeners.\n     *\n     * @param x  the x-value.\n     * @param y  the y-value.\n     *\n     * @return The item that was overwritten, if any.\n     *\n     * @since 1.0.10\n     */\n    public XYDataItem addOrUpdate(double x, double y) {\n        return addOrUpdate(new Double(x), new Double(y));\n    }", "javadoc_start_line": 515, "annotations_start_line": 526, "method_start_line": 526, "end_line": 528}]}], "project": {"name": "Chart", "version": 5}}