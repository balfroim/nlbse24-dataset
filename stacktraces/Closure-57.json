{"tours": [{"failing_test": {"className": " com.google.javascript.jscomp.ClosureCodingConventionTest", "methodName": "testRequire", "error": "junit.framework.AssertionFailedError", "message": "Expected: <null> but was: foo"}, "patched_method": {"file_path": "/src/com/google/javascript/jscomp/ClosureCodingConvention.java", "method_name": "extractClassNameIfGoog", "content": "  private static String extractClassNameIfGoog(Node node, Node parent,\n      String functionName){\n    String className = null;\n    if (NodeUtil.isExprCall(parent)) {\n      Node callee = node.getFirstChild();\n      if (callee != null && callee.getType() == Token.GETPROP) {\n        String qualifiedName = callee.getQualifiedName();\n        if (functionName.equals(qualifiedName)) {\n          Node target = callee.getNext();\n          if (target != null) {\n            className = target.getString();\n          }\n        }\n      }\n    }\n    return className;\n  }", "javadoc_start_line": 188, "annotations_start_line": 188, "method_start_line": 189, "end_line": 204}, "steps": [{"file_path": "/src/com/google/javascript/jscomp/ClosureCodingConvention.java", "method_name": "extractClassNameIfRequire", "content": "  /**\n   * Exctracts X from goog.require('X'), if the applied Node is goog.\n   *\n   * @return The extracted class name, or null.\n   */\n  @Override\n  public String extractClassNameIfRequire(Node node, Node parent){\n    return extractClassNameIfGoog(node, parent, \"goog.require\");\n  }", "javadoc_start_line": 178, "annotations_start_line": 183, "method_start_line": 184, "end_line": 186}, {"file_path": "/src/com/google/javascript/jscomp/ClosureCodingConvention.java", "method_name": "extractClassNameIfGoog", "content": "  private static String extractClassNameIfGoog(Node node, Node parent,\n      String functionName){\n    String className = null;\n    if (NodeUtil.isExprCall(parent)) {\n      Node callee = node.getFirstChild();\n      if (callee != null && callee.getType() == Token.GETPROP) {\n        String qualifiedName = callee.getQualifiedName();\n        if (functionName.equals(qualifiedName)) {\n          Node target = callee.getNext();\n          if (target != null) {\n            className = target.getString();\n          }\n        }\n      }\n    }\n    return className;\n  }", "javadoc_start_line": 188, "annotations_start_line": 188, "method_start_line": 189, "end_line": 204}]}], "project": {"name": "Closure", "version": 57}}