{"tours": [{"failing_test": {"className": " org.apache.commons.math3.stat.inference.MannWhitneyUTestTest", "methodName": "testBigDataSet", "error": "junit.framework.AssertionFailedError", "message": ""}, "patched_method": {"file_path": "/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java", "method_name": "calculateAsymptoticPValue", "content": "    /**\n     * @param Umin smallest Mann-Whitney U value\n     * @param n1 number of subjects in first sample\n     * @param n2 number of subjects in second sample\n     * @return two-sided asymptotic p-value\n     * @throws ConvergenceException if the p-value can not be computed\n     * due to a convergence error\n     * @throws MaxCountExceededException if the maximum number of\n     * iterations is exceeded\n     */\n    private double calculateAsymptoticPValue(final double Umin,\n                                             final int n1,\n                                             final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n        final int n1n2prod = n1 * n2;\n\n        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n        final double EU = n1n2prod / 2.0;\n        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\n\n        final double z = (Umin - EU) / FastMath.sqrt(VarU);\n\n        final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n        return 2 * standardNormal.cumulativeProbability(z);\n    }", "javadoc_start_line": 158, "annotations_start_line": 168, "method_start_line": 171, "end_line": 184}, "steps": [{"file_path": "/src/test/java/org/apache/commons/math3/stat/inference/MannWhitneyUTestTest.java", "method_name": "testBigDataSet", "content": "    public void testBigDataSet() throws Exception {\n        double[] d1 = new double[1500];\n        double[] d2 = new double[1500];\n        for (int i = 0; i < 1500; i++) {\n            d1[i] = 2 * i;\n            d2[i] = 2 * i + 1;\n        }\n        double result = testStatistic.mannWhitneyUTest(d1, d2);\n        Assert.assertTrue(result > 0.1);\n    }", "javadoc_start_line": 105, "annotations_start_line": 104, "method_start_line": 105, "end_line": 114}, {"file_path": "/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java", "method_name": "calculateAsymptoticPValue", "content": "    /**\n     * @param Umin smallest Mann-Whitney U value\n     * @param n1 number of subjects in first sample\n     * @param n2 number of subjects in second sample\n     * @return two-sided asymptotic p-value\n     * @throws ConvergenceException if the p-value can not be computed\n     * due to a convergence error\n     * @throws MaxCountExceededException if the maximum number of\n     * iterations is exceeded\n     */\n    private double calculateAsymptoticPValue(final double Umin,\n                                             final int n1,\n                                             final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n        final int n1n2prod = n1 * n2;\n\n        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n        final double EU = n1n2prod / 2.0;\n        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\n\n        final double z = (Umin - EU) / FastMath.sqrt(VarU);\n\n        final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n        return 2 * standardNormal.cumulativeProbability(z);\n    }", "javadoc_start_line": 158, "annotations_start_line": 168, "method_start_line": 171, "end_line": 184}]}], "project": {"name": "Math", "version": 30}}