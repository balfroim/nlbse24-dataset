{"tours": [{"failing_test": {"className": " org.apache.commons.lang3.StringUtilsEqualsIndexOfTest", "methodName": "testContainsAnyCharArrayWithSupplementaryChars", "error": "junit.framework.AssertionFailedError", "message": "expected:<false> but was:<true>"}, "patched_method": {"file_path": "/src/main/java/org/apache/commons/lang3/StringUtils.java", "method_name": "containsAny", "content": "    /**\n     * <p>Checks if the CharSequence contains any character in the given\n     * set of characters.</p>\n     *\n     * <p>A <code>null</code> CharSequence will return <code>false</code>.\n     * A <code>null</code> or zero length search array will return <code>false</code>.</p>\n     *\n     * <pre>\n     * StringUtils.containsAny(null, *)                = false\n     * StringUtils.containsAny(\"\", *)                  = false\n     * StringUtils.containsAny(*, null)                = false\n     * StringUtils.containsAny(*, [])                  = false\n     * StringUtils.containsAny(\"zzabyycdxx\",['z','a']) = true\n     * StringUtils.containsAny(\"zzabyycdxx\",['b','y']) = true\n     * StringUtils.containsAny(\"aba\", ['z'])           = false\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param searchChars  the chars to search for, may be null\n     * @return the <code>true</code> if any of the chars are found,\n     * <code>false</code> if no match or null input\n     * @since 2.4\n     */\n\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n\t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n\t\t\treturn false;\n\t\t}\n\t\tint csLength = cs.length();\n\t\tint searchLength = searchChars.length;\n\t\tfor (int i = 0; i < csLength; i++) {\n\t\t\tchar ch = cs.charAt(i);\n\t\t\tfor (int j = 0; j < searchLength; j++) {\n\t\t\t\tif (searchChars[j] == ch) {\n\t\t\t\t\t\t// ch is a supplementary character\n\t\t\t\t\t\t// ch is in the Basic Multilingual Plane\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "javadoc_start_line": 1417, "annotations_start_line": 1440, "method_start_line": 1440, "end_line": 1457}, "steps": [{"file_path": "/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java", "method_name": "testContainsAnyCharArrayWithSupplementaryChars", "content": "\t/**\n\t * See http://java.sun.com/developer/technicalArticles/Intl/Supplementary/\n\t */\n\tpublic void testContainsAnyCharArrayWithSupplementaryChars() {\n\t\tassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20000.toCharArray()));\n\t\tassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20001.toCharArray()));\n\t\tassertEquals(true, StringUtils.containsAny(CharU20000, CharU20000.toCharArray()));\n\t\t// Sanity check:\n\t\tassertEquals(-1, CharU20000.indexOf(CharU20001));\n\t\tassertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\n\t\tassertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n\t\t// Test:\n\t\tassertEquals(false, StringUtils.containsAny(CharU20000, CharU20001.toCharArray()));\n\t\tassertEquals(false, StringUtils.containsAny(CharU20001, CharU20000.toCharArray()));\n\t}", "javadoc_start_line": 684, "annotations_start_line": 687, "method_start_line": 687, "end_line": 698}, {"file_path": "/src/main/java/org/apache/commons/lang3/StringUtils.java", "method_name": "containsAny", "content": "    /**\n     * <p>Checks if the CharSequence contains any character in the given\n     * set of characters.</p>\n     *\n     * <p>A <code>null</code> CharSequence will return <code>false</code>.\n     * A <code>null</code> or zero length search array will return <code>false</code>.</p>\n     *\n     * <pre>\n     * StringUtils.containsAny(null, *)                = false\n     * StringUtils.containsAny(\"\", *)                  = false\n     * StringUtils.containsAny(*, null)                = false\n     * StringUtils.containsAny(*, [])                  = false\n     * StringUtils.containsAny(\"zzabyycdxx\",['z','a']) = true\n     * StringUtils.containsAny(\"zzabyycdxx\",['b','y']) = true\n     * StringUtils.containsAny(\"aba\", ['z'])           = false\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param searchChars  the chars to search for, may be null\n     * @return the <code>true</code> if any of the chars are found,\n     * <code>false</code> if no match or null input\n     * @since 2.4\n     */\n\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n\t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n\t\t\treturn false;\n\t\t}\n\t\tint csLength = cs.length();\n\t\tint searchLength = searchChars.length;\n\t\tfor (int i = 0; i < csLength; i++) {\n\t\t\tchar ch = cs.charAt(i);\n\t\t\tfor (int j = 0; j < searchLength; j++) {\n\t\t\t\tif (searchChars[j] == ch) {\n\t\t\t\t\t\t// ch is a supplementary character\n\t\t\t\t\t\t// ch is in the Basic Multilingual Plane\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "javadoc_start_line": 1417, "annotations_start_line": 1440, "method_start_line": 1440, "end_line": 1457}]}, {"failing_test": {"className": " org.apache.commons.lang3.StringUtilsEqualsIndexOfTest", "methodName": "testContainsAnyStringWithSupplementaryChars", "error": "junit.framework.AssertionFailedError", "message": "expected:<false> but was:<true>"}, "patched_method": {"file_path": "/src/main/java/org/apache/commons/lang3/StringUtils.java", "method_name": "containsAny", "content": "    /**\n     * <p>Checks if the CharSequence contains any character in the given\n     * set of characters.</p>\n     *\n     * <p>A <code>null</code> CharSequence will return <code>false</code>.\n     * A <code>null</code> or zero length search array will return <code>false</code>.</p>\n     *\n     * <pre>\n     * StringUtils.containsAny(null, *)                = false\n     * StringUtils.containsAny(\"\", *)                  = false\n     * StringUtils.containsAny(*, null)                = false\n     * StringUtils.containsAny(*, [])                  = false\n     * StringUtils.containsAny(\"zzabyycdxx\",['z','a']) = true\n     * StringUtils.containsAny(\"zzabyycdxx\",['b','y']) = true\n     * StringUtils.containsAny(\"aba\", ['z'])           = false\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param searchChars  the chars to search for, may be null\n     * @return the <code>true</code> if any of the chars are found,\n     * <code>false</code> if no match or null input\n     * @since 2.4\n     */\n\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n\t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n\t\t\treturn false;\n\t\t}\n\t\tint csLength = cs.length();\n\t\tint searchLength = searchChars.length;\n\t\tfor (int i = 0; i < csLength; i++) {\n\t\t\tchar ch = cs.charAt(i);\n\t\t\tfor (int j = 0; j < searchLength; j++) {\n\t\t\t\tif (searchChars[j] == ch) {\n\t\t\t\t\t\t// ch is a supplementary character\n\t\t\t\t\t\t// ch is in the Basic Multilingual Plane\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "javadoc_start_line": 1417, "annotations_start_line": 1440, "method_start_line": 1440, "end_line": 1457}, "steps": [{"file_path": "/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java", "method_name": "testContainsAnyStringWithSupplementaryChars", "content": "\t/**\n\t * See http://java.sun.com/developer/technicalArticles/Intl/Supplementary/\n\t */\n\tpublic void testContainsAnyStringWithSupplementaryChars() {\n\t\tassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20000));\n\t\tassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20001));\n\t\tassertEquals(true, StringUtils.containsAny(CharU20000, CharU20000));\n\t\t// Sanity check:\n\t\tassertEquals(-1, CharU20000.indexOf(CharU20001));\n\t\tassertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\n\t\tassertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n\t\t// Test:\n\t\tassertEquals(false, StringUtils.containsAny(CharU20000, CharU20001));\n\t\tassertEquals(false, StringUtils.containsAny(CharU20001, CharU20000));\n\t}", "javadoc_start_line": 668, "annotations_start_line": 671, "method_start_line": 671, "end_line": 682}]}], "project": {"name": "Lang", "version": 31}}